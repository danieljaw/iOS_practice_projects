// create folder


// Your fitness tracking app wouldn't be much of a fitness tracker if it couldn't help users track their workouts. In order to track a user's run, you'll need to have some kind of data structure that can hold information about the workout. For the sake of simplicity, you'll focus specifically on running workouts.

struct RunningWorkout {
    var distance = 0.0
    var time = 0.0
    var elevation = 0.0
}

// Create a variable instance of RunningWorkout called firstRun without supplying any arguments. Print out all three properties of firstRun. This is a good example of when using default values is appropriate, seeing as all running workouts start with a distance, time, and elevation change of 0.

var firstRun = RunningWorkout()
print(firstRun.distance)
print(firstRun.time)
print(firstRun.elevation)


// Now imagine that throughout the course of the run, you go a distance of 2,396 meters in 15.3 minutes, and gain 94 meters of elevation. Update the values of firstRun's properties accordingly. Print a statement about your run using the values of each property.
firstRun.distance = 2.396
firstRun.time = 15.3
firstRun.elevation = 94

print("My first run was very hard. I made a distance near to 3 km - it was: \(firstRun.distance) meters. It took me over \(firstRun.time). So it's around 15 minutes. The elevation was incredible - \(firstRun.elevation) meters of elevation")
