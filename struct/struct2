struct GPS {
    var latitude: Double
    var longitude: Double
}

let somePlace = GPS(latitude: 51.514004, longitude: 0.1252226)
print(somePlace.longitude)
print(somePlace.latitude)

struct Book {
    var title: String
    var author: String
    var pages: Int
    var price: Double
}

let favoriteBook = Book(title: "Der kleine Prinz", author: "Antoine de Saint-Exup√©ry", pages: 100, price: 7.99)
print("My favourite book is called: \(favoriteBook.title) and its written by: \(favoriteBook.author). This book is translated in over than 100 languages and each books contains around \(favoriteBook.pages) pages. Usual price is \(favoriteBook.price) Euro")


struct Laptop {
    var screenSize: Int = 13
    var repairCount: Int = 0
    var yearPurchased: Int
}

let firstLaptop = Laptop(yearPurchased: 2022)
let secondLaptop = Laptop(screenSize: 15, yearPurchased: 2017)


struct User {
    var name: String
    var age: Int
    var height: Double
    var weight: Double
    var activityLevel: Int
}

var daniel = User(name: "Daniel", age: 25, height: 183, weight: 100, activityLevel: 3)

print("User's name: \(daniel.name) and age: \(daniel.age). His hight is \(daniel.height) cm and weight \(daniel.weight) kg. Activity level is - around \(daniel.activityLevel) level")

// here - some initializators :)


struct Distance {
    var meters: Double
    var feet: Double
    
    init(meters: Double) {
        self.meters = meters
        self.feet = meters * 3.28084 // convert to feets
    }
    
    init(feet: Double) {
        self.feet = feet
        self.meters = feet / 3.28084
    }
}

var mile = Distance(meters: 1600)
print(mile.feet)
var checkValue = 5249.344

print(mile.feet == checkValue)

var otherInstance = Distance(feet: 60)
print(otherInstance.meters)
var checkValue2 = 18.287999414784018

print(otherInstance.meters == checkValue2)
