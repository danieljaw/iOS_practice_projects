protocol CanFly {
    // to certyfikat
    func fly() // nie trzeba mieć {}
}

class Bird {
    
    var isFemale = true
    func layEgg() {
        if isFemale {
            print("Mamy nowego ptaka")
        }
    }
    

}
//mogę dziedziczyć

class Eagle: Bird, CanFly {
    func fly() {
        print("The eaagle rusza skrzydłami i lata")
    }
    
    
    func soar() {
        //szybować
        print("Orzeł prześlizguje się pomiędzy strumieniami powietrza - inne ptaki nie potrafią")
    }
    
}

class Penguin: Bird {
    func swim() {
        print("Pływa")
    }
}

struct FlyingMuseum {
    func flyingDemo(flyingObject: CanFly) {
        flyingObject.fly()
    }
}


struct Airplane: CanFly {
    func fly() {
        print("Samolot może latać, uzywa silnikow")
    }
    

}


let myEagle = Eagle()
//myEagle.fly()
//myEagle.layEgg()
//myEagle.soar()
let myPenguin = Penguin()
//myPenguin.layEgg()
//myPenguin.swim()
//myPenguin.fly() // a to nie prawda


let myPlane = Airplane()

let museum = FlyingMuseum()
museum.flyingDemo(flyingObject: myPlane)
myEagle.fly()
myPlane.fly()


museum.flyingDemo(flyingObject: myPlane)

