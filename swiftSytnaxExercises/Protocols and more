protocol AdvancedLifeSupport {
    func performCPR()
}

class EmergencyCallHandler {
    var delegate: AdvancedLifeSupport?
    // ktokolwiek lub cokolwiek może ustawić się jako delegate, musi mieć spełnione warunki opisane w AdvancedLifeSupport. Muszą wiedzieć jak wykonac CPR
    
    func assessSituatio() {
        print("Can you tell me what happend?")
    }
    
    func medicalEmergency() {
        // ta funkcja musi wezwać delegata, nie interesuje kto to zrobi ale musi mieć ALS
        delegate?.performCPR()
    }
}


struct Paramedic: AdvancedLifeSupport {
    
    init(handler: EmergencyCallHandler) {
        handler.delegate = self
    }
    // jeśli jest na zmianie musi przypisać sobie ten pager
    
    
    func performCPR() {
        print("The paramedic does chest comp, 30 pes sec")
    }
    
}


class Doctor: AdvancedLifeSupport {
    
    init(hanler: EmergencyCallHandler) {
        hanler.delegate = self
    }
    
    func performCPR() {
        print("The doctor does CPR")
    }
    
    func useStethoscope() {
        print("Listening HeartRate")
    }
    
    
}

class Surgeon: Doctor {
    //jesli chirurg dziedziczy po doktorze to też dziedziczy protokół ALifeSupport
    
    override func performCPR() {
        super.performCPR()
        print("Sing staying alive by the Bee")
    }
    
    func useElectricDrill() {
        print("Wrrr...")
    }
    
}

